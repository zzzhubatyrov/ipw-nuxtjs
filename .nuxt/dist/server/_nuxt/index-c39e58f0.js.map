{"version":3,"file":"index-c39e58f0.js","sources":["../../../../pages/auth/index.vue"],"sourcesContent":["<template>\n  <form class=\"authForm\" v-if=\"isLogin\" @submit.prevent=\"loginHandler\">\n    <h1>Авторизация <span>/</span> Регистрация</h1>\n    <input type=\"email\" v-model=\"email\" placeholder=\"Почта\" required>\n    <input type=\"password\" v-model=\"password\" placeholder=\"Пароль\" required>\n    <button class=\"btn\" type=\"submit\">Войти</button>\n    <p>Нет аккаунта?\n      <button class=\"btn\" @click=\"switchForm\">Зарегистрироваться</button>\n    </p>\n  </form>\n\n  <!-- Форма регистрации -->\n  <form class=\"authForm\" v-else @submit.prevent=\"registerHandler\">\n    <h1>Авторизация <span>/</span> Регистрация</h1>\n    <input type=\"text\" v-model=\"name\" placeholder=\"Имя / фамилия\" required>\n    <input type=\"email\" v-model=\"email\" placeholder=\"E-mail\" required>\n    <input type=\"password\" v-model=\"password\" placeholder=\"Пароль\" required>\n    <input type=\"password\" v-model=\"repeatPassword\" placeholder=\"Повторите пароль\" required>\n    <button class=\"btn\" type=\"submit\">Зарегистрироваться</button>\n    <p>\n      Уже есть аккаунт?\n      <button class=\"btn\" @click=\"switchForm\">Войти</button>\n    </p>\n  </form>\n</template>\n\n<script setup lang=\"ts\">\nimport {ref, onMounted} from 'vue'\nimport axios from 'axios'\nimport Cookies from 'js-cookie'\n\nconst isLogin = ref(true)\nconst login = ref('')\nconst name = ref('')\nconst email = ref('')\nconst password = ref('')\nconst repeatPassword = ref('')\nconst router = useRouter()\n\nconst loginHandler = async () => {\n  try {\n    const response = await axios.post(\n        'https://api.itprofessionalswork.ru/auth/v1/login',\n        {\n          email: email.value,\n          password: password.value\n        },\n        {\n          withCredentials: true\n        }\n    )\n    window.location.reload()\n    // router.push(\"/profile\")\n    // console.log(response)\n  } catch (e) {\n    console.log(e)\n  }\n}\nconst registerHandler = async () => {\n  try {\n    const response = await axios.post(\n        'https://api.itprofessionalswork.ru/auth/v1/register',\n        {\n          name: name.value,\n          email: email.value,\n          password: password.value,\n          repeatPassword: password.value\n        }, {withCredentials: false}\n    )\n    window.location.reload()\n    // console.log(response)\n  } catch (e) {\n    console.log(e)\n  }\n}\nconst switchForm = () => {\n  isLogin.value = !isLogin.value\n}\nonMounted(() => {\n  const isAuth = Cookies.get('ipw')\n  if (isAuth) {\n    router.push('/profile')\n  }\n})\n</script>\n\n<style scoped>\n* {\n  color: #000;\n}\n\nh1 {\n  margin: 0;\n  padding: 0;\n  font-size: 24px;\n  font-weight: 500;\n}\n\n.authForm {\n  display: flex;\n  padding: 100px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  border-radius: 30px;\n  background: #FFF;\n}\n\ninput {\n  display: flex;\n  width: 320px;\n  padding: 15px 10px;\n  align-items: center;\n  border-radius: 15px;\n  border: .8px solid rgba(0, 0, 0, 0.60);\n  background: rgba(230, 230, 227, 0.40);\n}\n\ninput::placeholder {\n  color: rgba(0, 0, 0, 0.50);\n  font-size: 12px;\n  font-weight: 500;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AA+BM,UAAA,UAAU,IAAI,IAAI;AACV,QAAI,EAAE;AACd,UAAA,OAAO,IAAI,EAAE;AACb,UAAA,QAAQ,IAAI,EAAE;AACd,UAAA,WAAW,IAAI,EAAE;AACjB,UAAA,iBAAiB,IAAI,EAAE;AACd,cAAU;;;;;;;;;;;;;;;;;;"}