{"version":3,"file":"index-9ef03a81.js","sources":["../../../../node_modules/nuxt/dist/app/composables/state.js","../../../../pages/create-resume/index.vue"],"sourcesContent":["import { isRef, toRef } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nconst useStateKeyPrefix = \"$s\";\nexport function useState(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [_key, init] = args;\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useState] key must be a string: \" + _key);\n  }\n  if (init !== void 0 && typeof init !== \"function\") {\n    throw new Error(\"[nuxt] [useState] init must be a function: \" + init);\n  }\n  const key = useStateKeyPrefix + _key;\n  const nuxt = useNuxtApp();\n  const state = toRef(nuxt.payload.state, key);\n  if (state.value === void 0 && init) {\n    const initialValue = init();\n    if (isRef(initialValue)) {\n      nuxt.payload.state[key] = initialValue;\n      return initialValue;\n    }\n    state.value = initialValue;\n  }\n  return state;\n}\nexport function clearNuxtState(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.state).map((key) => key.substring(useStateKeyPrefix.length));\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : Array.isArray(keys) ? keys : [keys];\n  for (const _key of _keys) {\n    const key = useStateKeyPrefix + _key;\n    if (key in nuxtApp.payload.state) {\n      nuxtApp.payload.state[key] = void 0;\n    }\n  }\n}\n","<template>\n  <div class=\"container\">\n    <div class=\"createResume-left_block\">\n      <h1 class=\"logo\">IPW</h1>\n      <h3 class=\"second-logo\">itprofessionalswork</h3>\n      <h2 class=\"createResume-title\">Создание Резюме</h2>\n    </div>\n    <div class=\"createResume-right_block\">\n      <div class=\"createResume-content_block\">\n        <h1 class=\"createResume-head\">{{ createResumeHeadTitle }}</h1>\n        <div class=\"createResume-progressDot_block\">\n          <div class=\"progress-dots\">\n            <div v-for=\"(step, index) in steps\" :key=\"index\" :class=\"dotClass(index)\" @click=\"goToStep(index)\">\n<!--              {{ index + 1 }}-->\n            </div>\n          </div>\n        </div>\n        <div class=\"createResume-content\">\n          <div class=\"step\" v-show=\"currentStep === 0\">\n            <div class=\"createResume-specialize_block\">\n              <h3 class=\"createResume-specialize_head\">Специализация</h3>\n              <div class=\"createResume-specialize_content\">\n                <input v-model=\"specializeInput\" type=\"text\" class=\"specialize-input\">\n              </div>\n            </div>\n            <div class=\"createResume-status_block\">\n              <h3 class=\"createResume-status_head\">Готовность к работе</h3>\n              <div class=\"createResume-status_content\">\n                <select v-model=\"statusSelect\" class=\"status-select\" name=\"status-select\">\n                  <option value=\"Ищу работу\">Ищу работу</option>\n                  <option value=\"Не ищу работу\">Не ищу работу</option>\n                  <option value=\"Рассмотрю предложения\">Рассмотрю предложения</option>\n                </select>\n              </div>\n            </div>\n            <div class=\"createResume-salary_block\">\n              <h3 class=\"createResume-salary_head\">Ожидаемое вознаграждение</h3>\n              <div class=\"createResume-salary_content\">\n                <input v-model=\"salaryInput\" type=\"text\" class=\"salary-input\">\n              </div>\n            </div>\n            <div class=\"createResume-description_block\">\n              <h3 class=\"createResume-description_head\">Напишите о себе</h3>\n              <div class=\"createResume-description_content\">\n                <textarea v-model=\"descResume\" type=\"text\" class=\"descriptionResume-textarea\"></textarea>\n              </div>\n            </div>\n            <div class=\"createResume-skills_block\">\n              <h3 class=\"createResume-skills_head\">Укажите свой стэк</h3>\n              <div class=\"createResume-skills_content\">\n                <textarea type=\"text\" v-model=\"skillsValue\" class=\"skillsResume-textarea\"></textarea>\n              </div>\n            </div>\n          </div>\n<!--          <div v-show=\"currentStep === 1\">Content 2</div>-->\n<!--          <div v-show=\"currentStep === 2\">Content 3</div>-->\n        </div>\n      </div>\n      <div class=\"createResume-btn_block\">\n        <button class=\"btn\" @click=\"prevStep\" :disabled=\"currentStep === 0\">Назад</button>\n        <button class=\"btn\" v-if=\"currentStep == 0\" @click=\"createResume\">Сохранить</button>\n<!--        :disabled=\"currentStep === steps.length - 1\"-->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {ref} from 'vue'\nimport axios from \"axios\";\nimport {algorithms} from \"iron-webcrypto\";\n\n// const steps = ref([1, 2, 3])\nconst steps = ref([1])\nconst currentStep = useState<number>('currentStep', () => 0)\nconst createResumeHeadTitle = \"<info />\"\n\n\nconst specializeInput = ref(\"\")\n// Middle Golang Backend\n// const level = specializeInput.value.split(\" \")[0]\n// const direction = specializeInput.value.split(\" \")[1] + \" \" + specializeInput.value.split(\" \")[2]\nconst statusSelect = ref(\"\")\nconst salaryInput = ref(\"\")\nconst descResume = ref(\"\")\nconst skillsValue = ref(\"\")\n\nconst dotClass = (index: any) => {\n  return {\n    'progress-dot': true,\n    'active': index <= currentStep.value\n  }\n}\n\nconst createResume = async () => {\n  const direction = specializeInput.value.split(\" \")[1] + \" \" + specializeInput.value.split(\" \")[2]\n  const level = specializeInput.value.split(\" \")[0]\n  try {\n    const response = axios.post(\"http://localhost:5000/data/v1/user/create-resume\", {\n      direction: direction,\n      level: level,\n      salary: salaryInput.value,\n      status: statusSelect.value,\n      description: descResume.value,\n      skills: skillsValue.value,\n    }, {withCredentials: true})\n    console.log(response)\n    // console.log(skillsValue.value)\n  } catch (e) {\n    console.log(e)\n  }\n}\nconst goToStep = (index: any) => {\n  currentStep.value = index\n}\nconst prevStep = () => {\n  if (currentStep.value > 0) {\n    currentStep.value--\n  }\n}\nconst nextStep = () => {\n  if (currentStep.value < steps.value.length - 1) {\n    currentStep.value++\n  }\n}\n</script>\n\n<style scoped>\n@import \"./assets/css/style.css\";\n.progress-dots {\n  display: flex;\n}\n\n.progress-dot {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: rgba(189, 189, 189, 0.78);\n  margin-right: 5px;\n}\n\n.progress-dot.active {\n  background-color: rgba(0, 102, 255, 0.78);\n}\n\n.step {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n</style>"],"names":["index"],"mappings":";;;;;;;;;;;;;;;AAEA,MAAM,oBAAoB;AACnB,SAAS,YAAY,MAAM;AAChC,QAAM,UAAU,OAAO,KAAK,KAAK,SAAS,CAAC,MAAM,WAAW,KAAK,IAAK,IAAG;AACzE,MAAI,OAAO,KAAK,CAAC,MAAM,UAAU;AAC/B,SAAK,QAAQ,OAAO;AAAA,EACrB;AACD,QAAM,CAAC,MAAM,IAAI,IAAI;AACrB,MAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,UAAM,IAAI,UAAU,6CAA6C,IAAI;AAAA,EACtE;AACD,MAAI,SAAS,UAAU,OAAO,SAAS,YAAY;AACjD,UAAM,IAAI,MAAM,gDAAgD,IAAI;AAAA,EACrE;AACD,QAAM,MAAM,oBAAoB;AAChC,QAAM,OAAO;AACb,QAAM,QAAQ,MAAM,KAAK,QAAQ,OAAO,GAAG;AAC3C,MAAI,MAAM,UAAU,UAAU,MAAM;AAClC,UAAM,eAAe;AACrB,QAAI,MAAM,YAAY,GAAG;AACvB,WAAK,QAAQ,MAAM,GAAG,IAAI;AAC1B,aAAO;AAAA,IACR;AACD,UAAM,QAAQ;AAAA,EACf;AACD,SAAO;AACT;ACgDA,MAAM,wBAAwB;;;;;AAF9B,UAAM,QAAQ,IAAI,CAAC,CAAC,CAAC;AACrB,UAAM,cAAc,SAAiB,eAAe,MAAM,CAAC;AAIrD,UAAA,kBAAkB,IAAI,EAAE;AAIxB,UAAA,eAAe,IAAI,EAAE;AACrB,UAAA,cAAc,IAAI,EAAE;AACpB,UAAA,aAAa,IAAI,EAAE;AACnB,UAAA,cAAc,IAAI,EAAE;AAEpB,UAAA,WAAW,CAACA,WAAe;AACxB,aAAA;AAAA,QACL,gBAAgB;AAAA,QAChB,UAAUA,UAAS,YAAY;AAAA,MAAA;AAAA,IACjC;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}